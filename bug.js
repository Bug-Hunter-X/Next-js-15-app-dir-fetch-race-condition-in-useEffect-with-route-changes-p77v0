In Next.js 15, a subtle issue can arise when using the `app` directory's `fetch` API within a `useEffect` hook that's triggered by route changes.  If the fetch request in `useEffect` relies on a route parameter or query parameter, and that parameter changes rapidly (e.g., due to rapid navigation), the requests might pile up, leading to unnecessary data fetching or even race conditions. The problem stems from the fact that `useEffect` doesn't automatically clean up previous fetches.